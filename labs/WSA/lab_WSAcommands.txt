The WSA commands are available at https://larsbesselmannibm.github.io/labs/WSA/lab_WSAcommands.txt
If you want to copy it  to your local system, use 
curl https://larsbesselmannibm.github.io/labs/WSA/lab_WSAcommands.txt > ~/Desktop/lab_WSAcommands.txt

# Set the WSA endpoint to the IP address provided by the lab provider
/usr/IBM/scripts/lab_setWSA_IP.sh <IP-ADDRESS>

# Create your working directory
export myUserID=XX
export myWorkingDir=/var/IBM/user$myUserID
mkdir $myWorkingDir
cd $myWorkingDir


# Accessing the WSA UI
https://cp-console.apps.ocp46.tec.uk.ibm.com/oidc/login.jsp
IBM provide credentials: admin/passw0rd
WSA credentials: admin/JnarVX84CKz3bAWWqrtjXHF4N3M3UwiW


# Getting configuration Parameters

# /usr/IBM/scripts/lab_retrieveWSADetails.sh
echo "******** Retrieve WSA Details ********"
mkdir $myWorkingDir/WSA
cd $myWorkingDir/WSA
oc login -s api.apps.ocp46.tec.uk.ibm.com:6443 -u admin -p passw0rd --insecure-skip-tls-verify=true
oc project websphere-automation
# Meetering API
echo "******** Retrieve WSA metering URL ********"
oc get route cpd -o jsonpath=https://{.spec.host}/websphereauto/meteringapi > WSA_metering_URL.txt && cat WSA_metering_URL.txt
# API Key:
echo "******** Retrieve WSA API Key ********"
oc get secret wsa-secure-metering-apis-encrypted-tokens -o jsonpath='{.data.wsa-secure-metering-apis-sa}' | base64 -d > WSA_metering_api-key.txt && cat WSA_metering_api-key.txt && echo
#Usage Metering Certificate
echo "******** Retrieve WSA Metering Certificate ********"
oc get secret external-tls-secret -o jsonpath='{.data.cert\.crt}' | base64 -d >  WSA_metering_certificate_file.pem && cat WSA_metering_certificate_file.pem

# Log out
oc logout

# Create a Keystore for metering
echo "******** Create WSA truststore ********"
keytool -import -trustcacerts -file WSA_metering_certificate_file.pem -keystore WSA_metering_Key.p12 -storetype PKCS12 -storepass meterPwd -v -trustcacerts -noprompt

# List all generated assets
echo "******** List Files with WSA Details ********"
ls -lrt WSA_metering*

#Install Liberty
mkdir $myWorkingDir/Liberty
cd $myWorkingDir/Liberty
java -jar /var/IBM/software/WAS/wlp-base-all-21.0.0.12.jar -acceptLicense /$myWorkingDir/Liberty

# Create a Liberty instance
$myWorkingDir/Liberty/wlp/bin/server create libertyServer$myUserID

# Configure unique Liberty Port
sed -i 's/9080/200'$myUserID'/g' /$myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/server.xml
sed -i 's/9443/210'$myUserID'/g' /$myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/server.xml

mkdir -p $myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/configDropins/defaults
cp /var/IBM/software/WAS/WSA_server.xml $myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/configDropins/defaults

echo "WSA_metering_URL=$(cat $myWorkingDir/WSA/WSA_metering_URL.txt)" > $myWorkingDir/WSA/bootstrap.properties
echo "WSA_metering_keystore=$myWorkingDir/WSA/WSA_metering_Key.p12" >> $myWorkingDir/WSA/bootstrap.properties
echo "WSA_metering_api-key=$(cat $myWorkingDir/WSA/WSA_metering_api-key.txt)" >> $myWorkingDir/WSA/bootstrap.properties
cat $myWorkingDir/WSA/bootstrap.properties

echo "bootstrap.include=$myWorkingDir/WSA/bootstrap.properties" >> $myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/bootstrap.properties

$myWorkingDir/Liberty/wlp/bin/server start libertyServer$myUserID

cat $myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/logs/messages.log



**** tWAS ***
# Create profile for standalone WAS
export WAS_HOME=/usr/IBM/WAS855ND
$WAS_HOME/bin/manageprofiles.sh -create \
   -profileName WSASrv$myUserID \
   -serverName twasServer$myUserID      \
   -templatePath $WAS_HOME/profileTemplates/default \
   -enableAdminSecurity false

# Get ports
cat /usr/IBM/WAS855ND/profiles/WSASrv$myUserID/logs/AboutThisProfile.txt | grep SOAP

# Start tWAS
/usr/IBM/WAS855ND/profiles/WSASrv$myUserID/bin/startServer.sh twasServer$myUserID

# Configure tWAS for WSA
cp /var/IBM/software/WAS/configuretWasUsageMetering.py /usr/IBM/WAS855ND/profiles/WSASrv$myUserID/bin
cd /usr/IBM/WAS855ND/profiles/WSASrv$myUserID/bin
./wsadmin.sh -lang jython -conntype SOAP -port 8881 -f configuretWasUsageMetering.py url=$(cat $myWorkingDir/WSA/WSA_metering_URL.txt) apiKey=$(cat $myWorkingDir/WSA/WSA_metering_api-key.txt) trustStorePassword=meterPwd

# Restart tWAS
/usr/IBM/WAS855ND/profiles/WSASrv$myUserID/bin/stopServer.sh twasServer$myUserID
/usr/IBM/WAS855ND/profiles/WSASrv$myUserID/bin/startServer.sh twasServer$myUserID


# Configure a new feature for an updated application
gedit $myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/server.xml
        <feature>jaxws-2.2</feature>

cat $myWorkingDir/Liberty/wlp/usr/servers/libertyServer$myUserID/logs/messages.log


# Apply fix to Liberty
# Via script:
/usr/IBM/scripts/lab_wlp_applyFix.sh
# Manually
echo "Apply Fix"
$myWorkingDir/Liberty/wlp/bin/server stop libertyServer$myUserID
echo "Apply iFix to resolve CVE"
java -jar /var/IBM/software/WAS/210012-extended-archive-ifph42074.jar --installLocation $myWorkingDir/Liberty/wlp --suppressInfo
$myWorkingDir/Liberty/wlp/bin/server start libertyServer$myUserID



# Apply fix to tWAS
# Via script:
/usr/IBM/scripts/lab_was_applyFixes.sh
# Manually
export fixID="8.5.5.5-WS-WAS-IFPH36923"
export fixRepo="8.5.5.5-ws-was-ifph36923.zip"
export WAS855ND_HOME="/usr/IBM/WAS855ND"
export WAS855ND_PROFILE="$WAS855ND_HOME/profiles/WSASrv$myUserID"
export IMCL_HOME="/usr/IBM/IM/eclipse/tools"
echo "Stop Server"
$WAS855ND_PROFILE/bin/stopServer.sh twasServer$myUserID
echo "Apply Fix $fixID"
$IMCL_HOME/imcl install $fixID -repositories /var/IBM/software/WAS/$fixRepo -installationDirectory $WAS855ND_HOME -log /var/IBM/temp/$fixID.log
echo "Start Server"
$WAS855ND_PROFILE/bin/startServer.sh twasServer$myUserID



# Remove fix from Liberty
# Via script:
/usr/IBM/scripts/lab_wlp_removeFix.sh
# Manually
# Stop Server
$myWorkingDir/Liberty/wlp/bin/server stop libertyServer$myUserID
echo "Remove iFix"
rm $myWorkingDir/Liberty/wlp/lib/com.ibm.ws.jaxws.common_1.0.59.cl211220211208-1644.jar
# rm $myWorkingDir/Liberty/wlp/lib/com.ibm.ws.org.apache.myfaces.2.3_1.0.47.cl201220210331-1851.jar
rm $myWorkingDir/Liberty/wlp/lib/fixes/210012-extended-archive-IFPH42074_21.0.0012.20220115_0043.xml
rm $myWorkingDir/Liberty/wlp/lib/fixes/210012-extended-archive-IFPH42074_21.0.0012.20220115_0043.lpmf
# Start Server
$myWorkingDir/Liberty/wlp/bin/server start libertyServer$myUserID

# Remove fix from tWAS
# Via script:
/usr/IBM/scripts/lab_was_removeFixes.sh



# Cleanup:
# Stop servers
$myWorkingDir/Liberty/wlp/bin/server stop libertyServer$myUserID
/usr/IBM/WAS855ND/profiles/WSASrv$myUserID/bin/stopServer.sh twasServer$myUserID

# Remove profiles
cd ~
rm -rf $myWorkingDir
/usr/IBM/WAS855ND/bin/manageprofiles.sh -delete  -profileName WSASrv$myUserID
rm -rf /usr/IBM/WAS855ND/profiles/WSASrv$myUserID

# Cleanup WSA console:
# Change /etc/hosts
sudo cp /etc/hosts.wsa /etc/hosts
cat /etc/hosts
